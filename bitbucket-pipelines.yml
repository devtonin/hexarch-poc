#  Template maven-build

#  This template allows you to test and build your Java project with Maven.
#  The workflow allows running tests, code checkstyle and security scans on the default branch.

image: sensedia/openjdk-11-pipeline:latest

# SonarCloud scanner needs the full history to assign issues properly
clone:
  depth: full

definitions:
  caches:
    sonar: ~/.sonar/cache
  services:
    docker:
      memory: 2048
  steps:
    - step: &build-test
        name: Build and run project's unit test
        script:
          - mvn -B -U verify sonar:sonar
        artifacts:
          - target/**
        caches:
          - maven
          - sonar
        after-script:
          # Collect checkstyle results, if any, and convert to Bitbucket Code Insights.
          - pipe: atlassian/checkstyle-report:0.3.0
    - step: &security-scan
        name: Run Security Scan
        script:
          # Run a security scan for sensitive data.
          # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
          - pipe: atlassian/git-secrets-scan:0.5.1
    - step: &nexus-deploy
        name: Nexus Deploy
        script:
          - mvn -s settings.xml -B -DskipTests -DskipInstall -DskipDeploy=false deploy
        artifacts:
          - participant-api-ms/target/*.jar
        caches:
          - maven
    - step: &push-image
        name: Build Docker image and push to registry (AWS ECR)
        caches:
          - docker
        script:
          - export BITBUCKET_COMMIT_SHORT=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - export BRANCH=$(echo $BITBUCKET_BRANCH | cut -d- -f1)
          - docker build -f Dockerfile -t $SENSEDIA_APP_NAME:latest .    #Variable $SENSEDIA_APP_NAME located in repository variables
          - pipe: atlassian/aws-ecr-push-image:1.0.2
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID                   #Variables in bitbucket Deployment
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              IMAGE_NAME: $SENSEDIA_APP_NAME
              TAGS: $BITBUCKET_TAG $BITBUCKET_COMMIT_SHORT $BRANCH
        artifacts:
          - template/target/**
    - step: &deployment
        name: Deploy to tst3 environment
        deployment: "Test"
        script:
          - echo "Deploying to Testing"
          - pipe: atlassian/aws-eks-kubectl-run:2.2.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              CLUSTER_NAME: $CLUSTER_NAME
              KUBECTL_COMMAND: 'rollout restart deployment/$DEPLOYMENT_NAME -n $NAMESPACE'
        services:
          - docker

pipelines:
  default:
    - step: *build-test
  branches:
    release*:
      - step: *build-test
      - step: *security-scan
      - step: *push-image
      - step: *deployment #deploy in tst3
    main:
      - step: *build-test
      - step: *security-scan
      #- step: *nexus-deploy #with SNAPSHOT
      - step: *push-image
      - step: *deployment #deploy in tst3
#      - step:
#          <<: *push-image #Overwrite the default deployment in the step: Deploy to Staging
#          deployment: Staging
  pull-requests:
    '**':
      - step: *build-test
      - step: *security-scan
  tags:
    '**':
      - step: *build-test
      #- step: *nexus-deploy #without SNAPSHOT
      - step: *push-image
#      - step:
#          <<: *push-image
#          deployment: Production #Deploy to Production